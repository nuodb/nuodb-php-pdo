<?php /* $Id: testdb.inc 161049 2012-03-26 01:37:06Z tgates $ */

$user = 'dba';
$password = 'dba';
$db = NULL;
ini_set('nuodb.default_user',$user);
ini_set('nuodb.default_password',$password);

$nuotestport = getenv("NUOTESTPORT");
if (!$nuotestport) {
  $nuotestport = "48004";
}

/* we need just the generated name, not the file itself */
unlink($test_base = tempnam('/tmp',"php_nuodb_test"));

function open_db()
{
  global $db, $user, $password;

  $nuotestport = getenv("NUOTESTPORT");
  if (! $nuotestport) {
      $nuotestport = "48004";
  }

  $url = "nuodb:database=test@localhost:" . $nuotestport . ";schema=PDOTEST";
  try {
    $db = new PDO($url, $user, $password) or die;
    $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
  }
  catch(PDOException $e) {
    echo "FAILED: ";
    echo $e->getMessage();
  }
  return $db;
}


function create_table_hockey_test() {
  global $db;
  print("create table Hockey_test\n");
  try {
    $sql = 'create table Hockey_test ( Id Integer not NULL generated by default as identity primary key, Number Integer, Name String, Position String, Team String);';
    $count = $db->exec($sql);
    $sql = 'create unique index player_idx_test on Hockey_test (Number, Name, Team);';
    $count = $db->exec($sql);

    $sql = "INSERT INTO Hockey_test (Number, Name, Position, Team) VALUES (:number, :name, :position, :team)";
    $stmt = $db->prepare($sql);

    $players = array (
             0 => array ( "Number" => 37, "Name" => "PATRICE BERGERON", "Position" => "Forward", "Team" => "Bruins"),
             1 => array ( "Number" => 48, "Name" => "CHRIS BOURQUE", "Position" => "Forward", "Team" => "Bruins"),
             2 => array ( "Number" => 11, "Name" => "GREGORY CAMPBELL", "Position" => "Forward", "Team" => "Bruins"),
             3 => array ( "Number" => 18, "Name" => "NATHAN HORTON", "Position" => "Forward", "Team" => "Bruins"),
             4 => array ( "Number" => 23, "Name" => "CHRIS KELLY", "Position" => "Forward", "Team" => "Bruins"),
             5 => array ( "Number" => 46, "Name" => "DAVID KREJCI", "Position" => "Forward", "Team" => "Bruins"),
             6 => array ( "Number" => 17, "Name" => "MILAN LUCIC", "Position" => "Forward", "Team" => "Bruins"),
             7 => array ( "Number" => 64, "Name" => "LANE MACDERMID", "Position" => "Forward", "Team" => "Bruins"),
             8 => array ( "Number" => 63, "Name" => "BRAD MARCHAND", "Position" => "Forward", "Team" => "Bruins"),
             9 => array ( "Number" => 20, "Name" => "DANIEL PAILLE", "Position" => "Forward", "Team" => "Bruins"),
             10 => array ( "Number" => 49, "Name" => "RICH PEVERLEY", "Position" => "Forward", "Team" => "Bruins"),
             11 => array ( "Number" => 91, "Name" => "MARC SAVARD", "Position" => "Forward", "Team" => "Bruins"),
             12 => array ( "Number" => 19, "Name" => "TYLER SEGUIN", "Position" => "Forward", "Team" => "Bruins"),
             13 => array ( "Number" => 22, "Name" => "SHAWN THORNTON", "Position" => "Forward", "Team" => "Bruins"),
             14 => array ( "Number" => 55, "Name" => "JOHNNY BOYCHUK", "Position" => "Defense", "Team" => "Bruins"),
             15 => array ( "Number" => 33, "Name" => "ZDENO CHARA", "Position" => "Defense", "Team" => "Bruins"),
             16 => array ( "Number" => 21, "Name" => "ANDREW FERENCE", "Position" => "Defense", "Team" => "Bruins"),
             17 => array ( "Number" => 27, "Name" => "DOUGIE HAMILTON", "Position" => "Defense", "Team" => "Bruins"),
             18 => array ( "Number" => 45, "Name" => "AARON JOHNSON", "Position" => "Defense", "Team" => "Bruins"),
             19 => array ( "Number" => 54, "Name" => "ADAM MCQUAID", "Position" => "Defense", "Team" => "Bruins"),
             20 => array ( "Number" => 44, "Name" => "DENNIS SEIDENBERG", "Position" => "Defense", "Team" => "Bruins"),
             21 => array ( "Number" => 35, "Name" => "ANTON KHUDOBIN", "Position" => "Goalie", "Team" => "Bruins"),
             22 => array ( "Number" => 40, "Name" => "TUUKKA RASK", "Position" => "Goalie", "Team" => "Bruins"),
             23 => array ( "Number" => 1, "Name" => "MAX SUMMIT", "Position" => "Fan", "Team" => "Bruins")
    );

    $players_count = count($players);
    for ($i=0; $i<$players_count; $i++) {
        $stmt->bindParam(':number', $players[$i]["Number"], PDO::PARAM_INT);
        $stmt->bindParam(':name', $players[$i]["Name"], PDO::PARAM_STR);
        $stmt->bindParam(':position', $players[$i]["Position"], PDO::PARAM_STR);
        $stmt->bindParam(':team', $players[$i]["Team"], PDO::PARAM_STR);
        $stmt->execute();
    }

    $stmt = NULL;
  } catch(PDOException $e) {
    print ("Failed\n");
    echo $e->getMessage();
  }
}

function drop_table_hockey_test() {
  global $db;
  print("drop table Hockey_test\n");
  try {
    $sql = "DROP TABLE Hockey_test CASCADE IF EXISTS;";
    $count = $db->exec($sql);
  } catch(PDOException $e) {
    echo $e->getMessage();
  }
}

//register_shutdown_function('cleanup_db');
//open_db();
